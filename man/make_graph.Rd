% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphs.R
\name{make_graph}
\alias{make_graph}
\title{Create network graph visualization using visNetwork}
\usage{
make_graph(
  input = list(),
  threshold = 10,
  deg = 2,
  cell_line_var = "dependency",
  bonferroni_cutoff = 0.05,
  corr_type = "positive",
  displayHeight = "90vh",
  displayWidth = "100\%",
  tooltipLink = FALSE,
  card = FALSE
)
}
\arguments{
\item{input}{A list containing character vector of gene_symbols used to create network graph}

\item{threshold}{A numerical representing the number of genes to pull from top and bottom tables}

\item{deg}{A numerical representing the minimum number of connections for a gene to be connected to the network}

\item{corr_type}{A string that describes what type of correlations to include, options are: "positive", "negative", or "both"}

\item{displayHeight}{Default to "90vh". The height of the network in pixels("500px"), as a percentage("100%"), or as a percentage of the viewport("70vh", where 70 represents 70% of the viewport)}

\item{displayWidth}{Default to "100%". The width of the network in pixels("500px"), as a percentage("100%"), or as a percentage of the viewport("70vh", where 70 represents 70% of the viewport)}

\item{tooltipLink}{Boolean to denote whether or not to include a link in the tooltip for a gene. Default to false.}
}
\value{
Outputs a complete network graph. If an error is thrown, then will return an empty graph.
}
\description{
This function takes in dependency correlations and a gene query list to then output a dependency network graph
visualization containing the top/bottom threshold for each of the top/bottom threshold of the gene query list
using visNetwork.
}
\examples{
make_graph(input = list(type = 'gene', query = 'ROCK1', content = 'ROCK1'))
make_graph(input = list(type = "gene", content = "ROCK1"))
make_graph(input = list(type = "gene", content = "ROCK1"), threshold = 15)
make_graph(input = list(type = "gene", content = "ROCK1"), card = TRUE)
make_graph(input = list(type = "gene", content = "ROCK1"), corr_type = "negative")
make_graph(input = list(type = "gene", content = "ROCK1"), corr_type = "both")
make_graph(input = list(type = "gene", content = c("ROCK1", "ROCK2")))
make_graph(input = list(type = "pathway", query = "1902965", content = c("RDX", "ROCK2", "DTX3L", "MSN", "SORL1", "EZR")), corr_type = "positive")
make_graph(input = list(type = "gene", content = "DTX3L"), corr_type = "negative") # disconnected query gene
make_graph(input = list(type = "compound", content = "aspirin"), corr_type = "negative")
}
